title = "Template 4"
# combining toml3 + cast_info stuff

[base_sql]
sql = '''SELECT COUNT(*) FROM title as t,
movie_keyword as mk, keyword as k,
movie_companies as mc, company_name as cn,
company_type as ct, kind_type as kt,
cast_info as ci, name as n, role_type as rt
WHERE t.id = mk.movie_id
AND t.id = mc.movie_id
AND t.id = ci.movie_id
AND ci.movie_id = mc.movie_id
AND ci.movie_id = mk.movie_id
AND mk.movie_id = mc.movie_id
AND k.id = mk.keyword_id
AND cn.id = mc.company_id
AND ct.id = mc.company_type_id
AND kt.id = t.kind_id
AND ci.person_id = n.id
AND ci.role_id = rt.id
AND t.production_year <= Xprod_year_up
AND Xprod_year_low < t.production_year
AND k.keyword IN (Xkeyword)
AND cn.country_code IN (Xcompany_country)
AND ct.kind IN (Xcompany_type)
AND kt.kind IN (Xmovie_kind)
AND rt.role IN (Xrole)
AND n.gender IN (Xgender)
'''

# template 1
[[templates]]

  name = "1a"

  # all the unknown predicates in the base sql will be specified in groups
  [[templates.predicates]]
  type = "list"
  columns = ["t.production_year"]
  keys = ["Xprod_year_low", "Xprod_year_up"]
  dependencies = 0
  options = [[1925, 1975], [1975, 2015], [1875, 1975], [1925,
  2015], [1950, 1990], [1990, 2015]]
  sampling_method = "uniform"
  pred_type = "range"
  min_samples = 1
  max_samples = 1

  [[templates.predicates]]
  type = "sql"
  columns = ["kt.kind"]
  keys = ["Xmovie_kind"]
  dependencies = 1

  # we want to sample this based on the ALREADY selected value for company name /
  # company type
  sql = '''
  SELECT kt.kind, count(*)
  FROM title as t, kind_type as kt
  WHERE t.kind_id = kt.id
  AND t.production_year <= Xprod_year_up
  AND Xprod_year_low < t.production_year
  GROUP BY kt.kind
  ORDER BY count(*) desc
  '''

  sampling_method = "quantile"
  num_quantiles = 2
  min_samples = 2
  max_samples = 15

  [[templates.predicates]]
  type = "sqls"
  columns = ["k.keyword"]
  keys = ["Xkeyword"]
  dependencies = 0
  sampling_method = "uniform"

  sqls = ["SELECT k.keyword, count(*) FROM keyword as k, movie_keyword as mk WHERE k.id = mk.keyword_id GROUP BY k.keyword HAVING count(*) > 5000" ,
  "SELECT k.keyword, count(*) FROM keyword as k, movie_keyword as mk WHERE k.id = mk.keyword_id GROUP BY k.keyword HAVING count(*) < 1000"]

  min_samples = 1
  max_samples = 15

  [[templates.predicates]]
  type = "sql"
  columns = ["ct.kind", "cn.country_code"]
  keys = ["Xcompany_type", "Xcompany_country"]
  dependencies = 0
  sampling_method = "quantile"
  num_quantiles = 2

  sql = '''SELECT ct.kind, cn.country_code, count(*) FROM company_name as cn,
  movie_companies as mc, company_type as ct WHERE cn.id = mc.company_id
  AND ct.kind IS NOT NULL AND cn.country_code IS NOT NULL
  AND mc.company_type_id = ct.id GROUP BY ct.kind,
  cn.country_code HAVING count(*) > 500 order by count(*) desc'''

  min_samples = 1
  max_samples = 15

  [[templates.predicates]]

  type = "sql"
  columns = ["n.gender", "rt.role"]
  keys = ["Xgender", "Xrole"]
  dependencies = 0

  sql = '''
  SELECT n.gender, rt.role, count(*)
  FROM cast_info as ci,
  name as n, role_type as rt
  WHERE ci.person_id = n.id
  AND ci.role_id = rt.id
  AND n.gender IS NOT NULL
  GROUP BY n.gender, rt.role
  ORDER BY count(*) desc
  '''

  sampling_method = "quantile"
  num_quantiles = 2
  min_samples = 1
  max_samples = 2

# template 2
# basically, removes dependency from production year
[[templates]]

  name = "1b"

  # all the unknown predicates in the base sql will be specified in groups
  [[templates.predicates]]
  type = "list"
  columns = ["t.production_year"]
  keys = ["Xprod_year_low", "Xprod_year_up"]
  dependencies = 0
  options = [[1900, 2015]]
  sampling_method = "uniform"
  pred_type = "range"
  min_samples = 1
  max_samples = 1

  [[templates.predicates]]
  type = "sql"
  columns = ["kt.kind"]
  keys = ["Xmovie_kind"]
  dependencies = 1

  # we want to sample this based on the ALREADY selected value for company name /
  # company type
  sql = '''
  SELECT kt.kind, count(*)
  FROM title as t, kind_type as kt
  WHERE t.kind_id = kt.id
  AND t.production_year <= Xprod_year_up
  AND Xprod_year_low < t.production_year
  GROUP BY kt.kind
  ORDER BY count(*) desc
  '''

  sampling_method = "quantile"
  num_quantiles = 2
  min_samples = 2
  max_samples = 15

  [[templates.predicates]]
  type = "sqls"
  columns = ["k.keyword"]
  keys = ["Xkeyword"]
  dependencies = 0
  sampling_method = "uniform"

  sqls = ["SELECT k.keyword, count(*) FROM keyword as k, movie_keyword as mk WHERE k.id = mk.keyword_id GROUP BY k.keyword HAVING count(*) > 5000" ,
  "SELECT k.keyword, count(*) FROM keyword as k, movie_keyword as mk WHERE k.id = mk.keyword_id GROUP BY k.keyword HAVING count(*) < 1000"]

  min_samples = 1
  max_samples = 5

  [[templates.predicates]]
  type = "sql"
  columns = ["ct.kind", "cn.country_code"]
  keys = ["Xcompany_type", "Xcompany_country"]
  dependencies = 0
  sampling_method = "quantile"
  num_quantiles = 2

  sql = '''SELECT ct.kind, cn.country_code, count(*) FROM company_name as cn,
  movie_companies as mc, company_type as ct WHERE cn.id = mc.company_id
  AND ct.kind IS NOT NULL AND cn.country_code IS NOT NULL
  AND mc.company_type_id = ct.id GROUP BY ct.kind,
  cn.country_code HAVING count(*) > 500 order by count(*) desc'''

  min_samples = 1
  max_samples = 5

  [[templates.predicates]]

  type = "sql"
  columns = ["n.gender", "rt.role"]
  keys = ["Xgender", "Xrole"]
  dependencies = 0

  sql = '''
  SELECT n.gender, rt.role, count(*)
  FROM cast_info as ci,
  name as n, role_type as rt
  WHERE ci.person_id = n.id
  AND ci.role_id = rt.id
  AND n.gender IS NOT NULL
  GROUP BY n.gender, rt.role
  ORDER BY count(*) desc
  '''

  sampling_method = "quantile"
  num_quantiles = 2
  min_samples = 1
  max_samples = 2
